{
    "name": "osrm_map_puller",
    "version": "1.0.0",
    "config": {
        "geofabrik_northamerica":"north-america-latest.osm.pbf",
        "geofabrik_oregon_download":"north-america/us/oregon-latest.osm.pbf",
        "geofabrik_washington_download":"north-america/us/washington-latest.osm.pbf",
        "geofabrik_illinois_download":"north-america/us/illinois-latest.osm.pbf",
        "geofabrik_indiana_download":"north-america/us/indiana-latest.osm.pbf",
        "geofabrik_greater_chicago_download":"north-america/us/greater-chicago.osm.pbf",
        "geofabrik_download":"north-america/us/greater-chicago.osm.pbf",
        "osrm_frontend_center":"45.418214,-122.706985",
        "osrm_frontend_zoom":"\"10\"",
        "osrm_version":"v5.18.0",
        "poly_output":"areas/areas.osm.pbf",
        "usa_output":"areas/conus.osm.pbf",
        "server_port":5000
    },
    "description": "This is npm scripts and a Dockerfile to stand up OSRM",
    "main": "index.js",
    "scripts": {
        "test": "tap test/*.js",
        "download": "npm run download:pbfclean -s  && npm run download:pbfget",
        "download:pbfclean": "if [ -d data -a -d data/osrm ]; then find ./data/osrm -name $npm_package_config_geofabrik_download -mtime +30 -delete; fi",
        "download:pbfdir": "mkdir -p data/osrm",
        "download:pbfget": "npm run download:pbfdir -s && if [ ! -e data/osrm/$npm_package_config_geofabrik_download ]; then curl --create-dirs http://download.geofabrik.de/$npm_package_config_geofabrik_download -o data/osrm/$npm_package_config_geofabrik_download; fi ",
        "download_na": "npm run download:pbfclean -s  && npm run download:pbfget",
        "download_na:pbfclean": "if [ -d data -a -d data/osrm ]; then find ./data/osrm -name $npm_package_config_geofabrik_northamerica -mtime +30 -delete; fi",
        "download_na:pbfget": "npm run download:pbfdir -s && if [ ! -e data/osrm/$npm_package_config_geofabrik_download ]; then curl --create-dirs http://download.geofabrik.de/$npm_package_config_geofabrik_northamerica -o data/osrm/$npm_package_config_geofabrik_download; fi ",
        "osrm": "npm run osrm:extract_network && npm run osrm:partition && npm run osrm:customize",
        "osrm_polycut":"npm run osrm:usapoly && npm run osrm:extract_network_usa && npm run osrm:partition_usa && npm run osrm:customize_usa",
        "osrm:poly":"docker run -t -v $(pwd)/data:/data osmium-tool extract -p /data/polyfiles/areas.poly /data/osrm/$npm_package_config_geofabrik_download -o /data/osrm/$npm_package_config_poly_output",
        "osrm:usapoly":"docker run -t -v $(pwd)/data:/data osmium-tool extract -p /data/polyfiles/usa_poly.geojson /data/osrm/$npm_package_config_geofabrik_northamerica -o /data/osrm/$npm_package_config_usa_output",
        "osrm:extract_network":"if [ ! -e data/osrm/`echo $npm_package_config_geofabrik_download | cut -f 1 -d .`.osrm ]; then docker run -t --rm -v $(pwd)/data/osrm:/data  osrm/osrm-backend:$npm_package_config_osrm_version osrm-extract -p /opt/car.lua /data/$npm_package_config_geofabrik_download; fi",
        "osrm:extract_network_poly":"docker run -t --rm -v $(pwd)/data/osrm:/data  osrm/osrm-backend:$npm_package_config_osrm_version osrm-extract -p /opt/car.lua /data/$npm_package_config_poly_output",
        "osrm:extract_network_usa":"docker run -t --rm -v $(pwd)/data/osrm:/data  osrm/osrm-backend:$npm_package_config_osrm_version osrm-extract -p /opt/car.lua /data/$npm_package_config_usa_output",
        "osrm:contract":"if [ ! -e data/osrm/`echo $npm_package_config_geofabrik_download | cut -f 1 -d .`.osrm.hsgr ]; then docker run --rm -t -v $(pwd)/data/osrm:/data osrm/osrm-backend:$npm_package_config_osrm_version osrm-contract /data/`echo $npm_package_config_geofabrik_download | cut -f 1 -d .`.osrm; fi && echo \"OSRM_GRAPH=/data/`echo $npm_package_config_geofabrik_download | cut -f 1 -d .`.osrm\" > .env",
        "osrm:partition":"docker run -t --rm -v $(pwd)/data/osrm:/data osrm/osrm-backend:$npm_package_config_osrm_version osrm-partition /data/`echo $npm_package_config_geofabrik_download | cut -f 1 -d .`.osrm",
        "osrm:customize":"docker run -t --rm -v $(pwd)/data/osrm:/data osrm/osrm-backend:$npm_package_config_osrm_version osrm-customize /data/`echo $npm_package_config_geofabrik_download | cut -f 1 -d .`.osrm",
        "osrm:contract_poly":"docker run -t --rm -v $(pwd)/data/osrm:/data osrm/osrm-backend:$npm_package_config_osrm_version osrm-contract /data/`echo $npm_package_config_poly_output | cut -f 1 -d .`.osrm && echo \"OSRM_GRAPH=/data/`echo $npm_package_config_poly_output | cut -f 1 -d .`.osrm\" > .env",
        "osrm:partition_usa":"docker run -t --rm -v $(pwd)/data/osrm:/data osrm/osrm-backend:$npm_package_config_osrm_version osrm-partition /data/$npm_package_config_usa_output",
        "osrm:customize_usa":"docker run -t --rm  -v $(pwd)/data/osrm:/data osrm/osrm-backend:$npm_package_config_osrm_version osrm-customize /data/$npm_package_config_usa_output",
        "build_osrm_server":"if STAT=$(type stat); then STAT='stat'; else STAT='gstat'; fi && export MAPDATE=`${STAT} -c '%y' data/osrm/$npm_package_config_geofabrik_download | cut -d '.' -f 1 | sed 's/[[:space:]]/T/;s/:/-/g'` && docker build -t jmarca/osrm-preloaded-backend:${MAPDATE} --build-arg osrm_version=$npm_package_config_osrm_version  -f Dockerfile.server .  && unset MAPDATE",
        "build_polytool":"docker build -t osmium-tool -f Dockerfile.osmium-tool .",
        "deploy_osrm_backend":"npm run download && npm run osrm && npm run build_osrm_server && export MAPDATE=`if STAT=$(type stat); then STAT='stat'; else STAT='gstat'; fi && ${STAT} -c '%y' data/osrm/$npm_package_config_geofabrik_download | cut -d '.' -f 1 | sed 's/[[:space:]]/T/;s/:/-/g'` &&  docker run -d --rm -p $npm_package_config_server_port:5000  jmarca/osrm-preloaded-backend:${MAPDATE} osrm-routed --algorithm mld /data/`echo $npm_package_config_geofabrik_download | cut -f 1 -d .`.osrm && unset MAPDATE",
        "deploy_osrm_frontend":" docker run -d --rm -p 9966:9966 -e OSRM_CENTER=$npm_package_config_osrm_frontend_center -e OSRM_ZOOM=$npm_package_config_osrm_frontend_zoom osrm/osrm-frontend && echo 'wait a couple of seconds for startup, then visit \n http://127.0.0.1:9966 in your browser'"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/jmarca/osrm_map_puller.git"
    },
    "keywords": [
        "OSRM",
        "OSM",
        "geofabrik"
    ],
    "author": "James E. Marca",
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/jmarca/osrm_map_puller/issues"
    },
    "homepage": "https://github.com/jmarca/osrm_map_puller#readme"
}
